Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\n# reading file\r\ndf = pd.read_csv('employee_attrition_dataset.csv')\r\n\r\n\r\n\r\n# Display the first 12 rows\r\nprint(\"---------> a\")\r\n\r\nprint(\"First 12 rows of the dataset:\")\r\nprint(df.head(12))\r\n\r\n# Display the last 12 rows\r\nprint(\"\\nLast 12 rows of the dataset:\")\r\nprint(df.tail(12))\r\n\r\nprint(\"---------> b\")\r\n\r\n# Print the total number of rows and columns\r\nrows, cols = df.shape\r\nprint(f\"\\nTotal Rows: {rows}, Total Columns: {cols}\")\r\n\r\nprint(\"---------> c\")\r\n\r\n# List all column names along with their corresponding data types\r\nprint(\"\\nColumn names and their data types:\")\r\nprint(df.dtypes)\r\n\r\nprint(\"---------> d\")\r\n\r\n# Print the name of the first column.\r\nprint(\"\\nName of the First Column:\", df.columns[0])\r\nprint(\"---------> f\")\r\n\r\n# Generate a summary of the dataset (non-null counts and data types).\r\nprint(\"\\nDataset Summary:\")\r\ndf.info()\r\nprint(\"---------> g\")\r\n\r\n# Display distinct values in the 'Department' column\r\ndistinct_departments = df['Department'].unique()\r\nprint(\"Distinct values in the 'Department' column:\")\r\nprint(distinct_departments)\r\n\r\n# Identify the most frequently occurring value in the 'Department' column\r\nmost_frequent_department = df['Department'].mode()[0]\r\nprint(\"\\nMost frequently occurring value in the 'Department' column:\", most_frequent_department)\r\n\r\n\r\nprint(\"---------> h\")\r\n\r\n# Calculate and present the mean, median, standard deviation, and percentiles for the 'Age' column\r\nmean_age = df['Age'].mean()\r\nmedian_age = df['Age'].median()\r\nstd_dev_age = df['Age'].std()\r\npercentiles_age = df['Age'].quantile([0.25, 0.50, 0.75])\r\n\r\nprint(\"\\nStatistics for the 'Age' column:\")\r\nprint(f\"Mean: {mean_age}\")\r\nprint(f\"Median: {median_age}\")\r\nprint(f\"Standard Deviation: {std_dev_age}\")\r\nprint(\"Percentiles:\")\r\nprint(percentiles_age)\r\nprint(\"----------> a\")\r\n# Apply a filter to select rows where 'Age' exceeds 30\r\nfiltered_df = df[df['Age'] > 30]\r\n\r\nprint(\"\\nRows where 'Age' exceeds 30:\")\r\nprint(filtered_df)\r\n\r\nprint(\"----------> b\")\r\n# Identify records where the 'Department' column starts with the letter 'S'\r\nmatching_records = df[df['Department'].str.startswith('S')]\r\n\r\n# Count how many records match this condition\r\nmatching_count = matching_records.shape[0]\r\n\r\nprint(\"\\nRecords where 'Department' starts with 'S':\")\r\nprint(matching_records)\r\nprint(f\"\\nTotal number of records where 'Department' starts with 'S': {matching_count}\")\r\n\r\nprint(\"----------> c\")\r\n\r\n# Determine the total number of duplicate rows\r\nduplicate_rows = df.duplicated().sum()\r\nprint(f\"\\nTotal number of duplicate rows: {duplicate_rows}\")\r\n\r\n# Remove duplicate rows\r\ndf = df.drop_duplicates()\r\n\r\n# Verify that duplicates have been removed\r\nprint(f\"\\nTotal number of rows after removing duplicates: {df.shape[0]}\")\r\n\r\n\r\ngrouped_data = df.groupby(['Attrition', 'Department']).size()\r\nprint(\"Grouped data by Attrition and Department:\\n\", grouped_data)\r\n\r\n#Check for Missing Values and Replace Them if Found:\r\nmissing_values = df.isnull().sum()\r\ndf_filled_missing = df.copy()\r\nfor column in df.columns:\r\n    if df[column].isnull().sum() > 0:\r\n        if df[column].dtype == 'object':\r\n            df_filled_missing[column].fillna(df[column].mode()[0], inplace=True)\r\n        else:\r\n            df_filled_missing[column].fillna(df[column].median(), inplace=True)\r\nprint(\"Missing values in each column:\\n\", missing_values)\r\n\r\n\r\n#divide a Numerical Column into 5 Equal-Width Bins and Count the Records in Each Bin:\r\nbins = pd.cut(df['Age'], bins=5)\r\nbin_counts = bins.value_counts()\r\nprint(\"Bin counts for Age:\\n\", bin_counts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 2952e42831dbf758aef68df7c4814b436bd43ebd)
+++ b/main.py	(date 1741109840128)
@@ -33,12 +33,12 @@
 
 # Print the name of the first column.
 print("\nName of the First Column:", df.columns[0])
-print("---------> f")
+print("---------> e")
 
 # Generate a summary of the dataset (non-null counts and data types).
 print("\nDataset Summary:")
 df.info()
-print("---------> g")
+print("---------> f")
 
 # Display distinct values in the 'Department' column
 distinct_departments = df['Department'].unique()
@@ -50,7 +50,7 @@
 print("\nMost frequently occurring value in the 'Department' column:", most_frequent_department)
 
 
-print("---------> h")
+print("---------> g")
 
 # Calculate and present the mean, median, standard deviation, and percentiles for the 'Age' column
 mean_age = df['Age'].mean()
@@ -64,6 +64,8 @@
 print(f"Standard Deviation: {std_dev_age}")
 print("Percentiles:")
 print(percentiles_age)
+
+
 print("----------> a")
 # Apply a filter to select rows where 'Age' exceeds 30
 filtered_df = df[df['Age'] > 30]
@@ -118,6 +120,41 @@
 
 
 
+#Convert the data type of a numerical column from integer to string.
+
+print("--------------> d")
+
+
+
+# Convert the data type of the 'Age' column from integer to string
+
+df['Age'] = df['Age'].astype(str)
+
+# Verify the conversion
+print(df.dtypes)
+
+
+
+#Group the dataset based on two selected categorical features and analyze the results.
+print("--------------> e")
+
+# Group the dataset by 'Attrition' and 'Department'
+grouped_data = df.groupby(['Attrition', 'Department']).size()
+
+# Display the grouped data
+print("Grouped data by Attrition and Department:\n", grouped_data)
+
+
+
+
+# Check for missing values
+
+print("--------------> f")
+missing_values = df.isnull().any()
+
+print("Missing values in each column:\n", missing_values)
+
+
 
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6561bfcc-7f84-4fe7-9772-d960aca0bad8\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"636aac7b-0230-4862-a85c-9344912b7b18\" name=\"Changes by asus\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"43463ab6-7a51-4328-ace5-cef230f9e9b5\" name=\"Changes by bebon\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"LineStatusTrackerManager\">\r\n    <file path=\"$PROJECT_DIR$/main.py\">\r\n      <ranges>\r\n        <range start1=\"66\" end1=\"66\" start2=\"66\" end2=\"79\" changelist=\"43463ab6-7a51-4328-ace5-cef230f9e9b5\" />\r\n        <range start1=\"67\" end1=\"67\" start2=\"80\" end2=\"85\" changelist=\"43463ab6-7a51-4328-ace5-cef230f9e9b5\" />\r\n        <range start1=\"68\" end1=\"68\" start2=\"86\" end2=\"127\" changelist=\"636aac7b-0230-4862-a85c-9344912b7b18\" />\r\n      </ranges>\r\n    </file>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 6\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2tcsLBLRqkxjvJQcHNNFzdkerDQ\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"monem\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\projectDS\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"projectDS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-ce3d9afa04ac-ba05f1cad1b1-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-242.20224.347\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6561bfcc-7f84-4fe7-9772-d960aca0bad8\" name=\"Changes\" comment=\"\" />\r\n      <created>1740662639112</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1740662639112</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2952e42831dbf758aef68df7c4814b436bd43ebd)
+++ b/.idea/workspace.xml	(date 1741109840133)
@@ -6,33 +6,26 @@
   <component name="ChangeListManager">
     <list default="true" id="6561bfcc-7f84-4fe7-9772-d960aca0bad8" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-    </list>
-    <list id="636aac7b-0230-4862-a85c-9344912b7b18" name="Changes by asus" comment="">
-      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-    </list>
-    <list id="43463ab6-7a51-4328-ace5-cef230f9e9b5" name="Changes by bebon" comment="">
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
+    <list id="636aac7b-0230-4862-a85c-9344912b7b18" name="Changes by asus" comment="" />
+    <list id="43463ab6-7a51-4328-ace5-cef230f9e9b5" name="Changes by bebon" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="monem" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="LineStatusTrackerManager">
-    <file path="$PROJECT_DIR$/main.py">
-      <ranges>
-        <range start1="66" end1="66" start2="66" end2="79" changelist="43463ab6-7a51-4328-ace5-cef230f9e9b5" />
-        <range start1="67" end1="67" start2="80" end2="85" changelist="43463ab6-7a51-4328-ace5-cef230f9e9b5" />
-        <range start1="68" end1="68" start2="86" end2="127" changelist="636aac7b-0230-4862-a85c-9344912b7b18" />
-      </ranges>
-    </file>
-  </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 6
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 6
+}</component>
   <component name="ProjectId" id="2tcsLBLRqkxjvJQcHNNFzdkerDQ" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
@@ -43,7 +36,8 @@
   "keyToString": {
     "Python.main.executor": "Run",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "monem"
+    "git-widget-placeholder": "monemVer",
+    "last_opened_file_path": "D:/labdistributed sysytem/lab3"
   }
 }]]></component>
   <component name="RecentsManager">
